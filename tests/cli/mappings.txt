$ # Create project p.
$ ${AK} p c p; echo $?
project_id: p:00000000000000000000000000000001
0
$ # Create env for project p.
$ ${AK} en c -p p e1; echo $?
env_id: e:00000000000000000000000000000002
0
$ # Create connection with nonexistent integration
$ ${AK} c c name -i integration:64656164626565666465616462656566 -t token2 -p p; echo $?; 
Error: integration "integration:64656164626565666465616462656566" not found
10
$ # Create connection with project as parent
$ ${AK} c c name -i http -t token2 -p p; echo $?; 
connection_id: connection:00000000000000000000000000000003
0
$ # List mappings empty list
$ ${AK} mappings list; echo $?
0
$ # use nonexistent connection
$ ${AK} mappings create --connection connection:00000000000000000000000000000001 --env=e:00000000000000000000000000000002 --module mn --event @a; echo $?
Error: connection "connection:00000000000000000000000000000001" not found
10
$ # create mapping invalid event type
$ ${AK} mappings create --connection connection:00000000000000000000000000000003 --env=e:00000000000000000000000000000002 --module mn --event @a; echo $?
Error: invalid event: event type cannot be empty: @a
1
$ # create mapping
$ ${AK} mappings create --connection connection:00000000000000000000000000000003 --env=e:00000000000000000000000000000002 --module mn --event et@a; echo $?
mapping_id: m:00000000000000000000000000000004
0
$ # get mapping
$ ${AK} mappings get m:00000000000000000000000000000004 -j; echo $?
{"mapping":{"mapping_id":"m:00000000000000000000000000000004","env_id":"e:00000000000000000000000000000002","connection_id":"connection:00000000000000000000000000000003","module_name":"mn","events":[{"event_type":"et","code_location":{"path":"a"}}]}}
0
$ # Create connection 2
$ ${AK} c c name -i http -t token2 -p p; echo $?; 
connection_id: connection:00000000000000000000000000000005
0
$ # create mapping 2 (full code location)
$ ${AK} mappings create --connection connection:00000000000000000000000000000005 --env=e:00000000000000000000000000000002 --module mn --event et@meow.kitteh:Meow; echo $?
mapping_id: m:00000000000000000000000000000006
0
$ # get mapping 2
$ ${AK} mappings get m:00000000000000000000000000000006 -j; echo $?
{"mapping":{"mapping_id":"m:00000000000000000000000000000006","env_id":"e:00000000000000000000000000000002","connection_id":"connection:00000000000000000000000000000005","module_name":"mn","events":[{"event_type":"et","code_location":{"path":"meow.kitteh","name":"Meow"}}]}}
0
$ # list mapping all
$ ${AK} mappings list  -j; echo $?
{"mapping_id":"m:00000000000000000000000000000004","env_id":"e:00000000000000000000000000000002","connection_id":"connection:00000000000000000000000000000003","module_name":"mn","events":[{"event_type":"et","code_location":{"path":"a"}}]}
{"mapping_id":"m:00000000000000000000000000000006","env_id":"e:00000000000000000000000000000002","connection_id":"connection:00000000000000000000000000000005","module_name":"mn","events":[{"event_type":"et","code_location":{"path":"meow.kitteh","name":"Meow"}}]}
0
$ # list mapping connection id
$ ${AK} mappings list --connection connection:00000000000000000000000000000005 -j; echo $?
{"mapping_id":"m:00000000000000000000000000000006","env_id":"e:00000000000000000000000000000002","connection_id":"connection:00000000000000000000000000000005","module_name":"mn","events":[{"event_type":"et","code_location":{"path":"meow.kitteh","name":"Meow"}}]}
0
$ # delete mapping 
$ ${AK} mappings delete m:00000000000000000000000000000006; echo $?
0
$ # list mapping all
$ ${AK} mappings list  -j; echo $?
{"mapping_id":"m:00000000000000000000000000000004","env_id":"e:00000000000000000000000000000002","connection_id":"connection:00000000000000000000000000000003","module_name":"mn","events":[{"event_type":"et","code_location":{"path":"a"}}]}
0
