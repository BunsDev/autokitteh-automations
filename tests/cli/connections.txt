$ # Create project p1 under authenticated user (precondition)
$ ${AK} p c p1; echo $?; echo
project_id: p:00000000000000000000000000000001
0

$ # Create connection without any required flag (error)
$ ${AK} c c; echo $?; echo
Error: accepts 1 arg(s), received 0
1

$ # Create connection without required name arg (error)
$ ${AK} c c -i integration:64656164626565666465616462656566 -t token -p u1; echo $?; echo
Error: accepts 1 arg(s), received 0
1

$ # Create connection without required integration flag (error)
$ ${AK} c c name -t token -p p:1234567890abcdef1234567890abcdef; echo $?; echo
Error: required flag(s) "integration" not set
1

$ # Create connection without required connection-token flag (error)
$ ${AK} c c name -i integration:64656164626565666465616462656566 -p u1; echo $?; echo
Error: required flag(s) "connection-token" not set
1

$ # Create connection without required project flag (error)
$ ${AK} c c name -i integration:64656164626565666465616462656566 -t token; echo $?; echo
Error: required flag(s) "project" not set
1

$ # Create connection with path-based (non-ID) integration
$ ${AK} c c name -i http -t token4 -p p1; echo $?; echo
connection_id: connection:00000000000000000000000000000002
0

$ # List all connections as unformatted JSON
$ ${AK} c ls -j; echo $?; echo
{"connection_id":"connection:00000000000000000000000000000002","integration_id":"integration:8000000000000000f1201a7ed83f7cd5","integration_token":"token4","project_id":"p:00000000000000000000000000000001","name":"name"}
0

$ # Get existing connection as formatted JSON
$ ${AK} c g connection:00000000000000000000000000000002 -J; echo $?; echo
{
  "connection": {
    "connection_id": "connection:00000000000000000000000000000002",
    "integration_id": "integration:8000000000000000f1201a7ed83f7cd5",
    "integration_token": "token4",
    "project_id": "p:00000000000000000000000000000001",
    "name": "name"
  }
}
0

$ # Get nonexistent connection without fail flag
$ ${AK} c g connection:10000000000000000000000000000000; echo $?; echo
0

$ # Get nonexistent connection with fail flag (error)
$ ${AK} c g connection:10000000000000000000000000000000 -f; echo $?; echo
Error: connection not found
10

$ # Disconnect existing connection
$ ${AK} c d connection:00000000000000000000000000000002; echo $?; echo
0

$ # Disconnect nonexistent connection
$ ${AK} c d connection:10000000000000000000000000000000; echo $?
Error: connection "connection:10000000000000000000000000000000" not found
10
