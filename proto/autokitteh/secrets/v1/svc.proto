syntax = "proto3";

package autokitteh.secrets.v1;

// SecretsService is a simple API for managing autokitteh user secrets.
// So far, this is limited to connections (managed by integrations).
service SecretsService {
  // Create generates a new token to represent a connection's specified
  // key-value data, and associates them bidirectionally. If the same
  // request is sent N times, this method returns N different tokens.
  rpc Create(CreateRequest) returns (CreateResponse);
  // Get retrieves a connection's key-value data based on the given token.
  // If the token isnâ€™t found then we return an error.
  rpc Get(GetRequest) returns (GetResponse);
  // List enumerates all the tokens (0 or more) that are associated with a given
  // connection identifier. This enables autokitteh to dispatch/fan-out asynchronous
  // events that it receives from integrations through all the relevant connections.
  rpc List(ListRequest) returns (ListResponse);
}

message CreateRequest {
  // Key-value data associated with this new connection. This may include IDs,
  // authentication and configuration details, and any other optional metadata.
  map<string, string> data = 1;
  // Indexable identifier of this new connection. Required in this form to
  // map asynchronous events back to all the corresponding connection tokens.
  string key = 2;
}

message CreateResponse {
  string token = 1;
}

message GetRequest {
  string token = 1;
}

message GetResponse {
  // Key-value data associated with this new connection. This may include IDs,
  // authentication and configuration details, and any other optional metadata.
  map<string, string> data = 1;
}

message ListRequest {
  // Indexable identifier of connections, from an incoming asynchronous event.
  string key = 1;
}

message ListResponse {
  repeated string tokens = 1;
}
