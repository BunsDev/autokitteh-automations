// @generated by protoc-gen-es v1.5.1 with parameter "target=ts"
// @generated from file autokitteh/runtimes/v1/run.proto (package autokitteh.runtimes.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";
import { Value } from "../../values/v1/values_pb.js";
import { Error } from "../../program/v1/program_pb.js";

/**
 * @generated from message autokitteh.runtimes.v1.CallWait
 */
export class CallWait extends Message<CallWait> {
  /**
   * @generated from field: autokitteh.values.v1.Value call = 1;
   */
  call?: Value;

  /**
   * @generated from field: repeated autokitteh.values.v1.Value args = 2;
   */
  args: Value[] = [];

  /**
   * @generated from field: map<string, autokitteh.values.v1.Value> kwargs = 3;
   */
  kwargs: { [key: string]: Value } = {};

  constructor(data?: PartialMessage<CallWait>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "autokitteh.runtimes.v1.CallWait";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "call", kind: "message", T: Value },
    { no: 2, name: "args", kind: "message", T: Value, repeated: true },
    { no: 3, name: "kwargs", kind: "map", K: 9 /* ScalarType.STRING */, V: {kind: "message", T: Value} },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CallWait {
    return new CallWait().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CallWait {
    return new CallWait().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CallWait {
    return new CallWait().fromJsonString(jsonString, options);
  }

  static equals(a: CallWait | PlainMessage<CallWait> | undefined, b: CallWait | PlainMessage<CallWait> | undefined): boolean {
    return proto3.util.equals(CallWait, a, b);
  }
}

/**
 * @generated from message autokitteh.runtimes.v1.RunStatus
 */
export class RunStatus extends Message<RunStatus> {
  /**
   * @generated from oneof autokitteh.runtimes.v1.RunStatus.states
   */
  states: {
    /**
     * @generated from field: autokitteh.runtimes.v1.RunStatus.Idle idle = 1;
     */
    value: RunStatus_Idle;
    case: "idle";
  } | {
    /**
     * @generated from field: autokitteh.runtimes.v1.RunStatus.Running running = 2;
     */
    value: RunStatus_Running;
    case: "running";
  } | {
    /**
     * only for modules that are not already compiled.
     *
     * @generated from field: autokitteh.runtimes.v1.RunStatus.LoadWait load_wait = 3;
     */
    value: RunStatus_LoadWait;
    case: "loadWait";
  } | {
    /**
     * @generated from field: autokitteh.runtimes.v1.CallWait call_wait = 4;
     */
    value: CallWait;
    case: "callWait";
  } | {
    /**
     * @generated from field: autokitteh.runtimes.v1.RunStatus.Completed completed = 5;
     */
    value: RunStatus_Completed;
    case: "completed";
  } | {
    /**
     * @generated from field: autokitteh.runtimes.v1.RunStatus.Error error = 6;
     */
    value: RunStatus_Error;
    case: "error";
  } | { case: undefined; value?: undefined } = { case: undefined };

  constructor(data?: PartialMessage<RunStatus>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "autokitteh.runtimes.v1.RunStatus";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "idle", kind: "message", T: RunStatus_Idle, oneof: "states" },
    { no: 2, name: "running", kind: "message", T: RunStatus_Running, oneof: "states" },
    { no: 3, name: "load_wait", kind: "message", T: RunStatus_LoadWait, oneof: "states" },
    { no: 4, name: "call_wait", kind: "message", T: CallWait, oneof: "states" },
    { no: 5, name: "completed", kind: "message", T: RunStatus_Completed, oneof: "states" },
    { no: 6, name: "error", kind: "message", T: RunStatus_Error, oneof: "states" },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): RunStatus {
    return new RunStatus().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): RunStatus {
    return new RunStatus().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): RunStatus {
    return new RunStatus().fromJsonString(jsonString, options);
  }

  static equals(a: RunStatus | PlainMessage<RunStatus> | undefined, b: RunStatus | PlainMessage<RunStatus> | undefined): boolean {
    return proto3.util.equals(RunStatus, a, b);
  }
}

/**
 * @generated from message autokitteh.runtimes.v1.RunStatus.Idle
 */
export class RunStatus_Idle extends Message<RunStatus_Idle> {
  constructor(data?: PartialMessage<RunStatus_Idle>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "autokitteh.runtimes.v1.RunStatus.Idle";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): RunStatus_Idle {
    return new RunStatus_Idle().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): RunStatus_Idle {
    return new RunStatus_Idle().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): RunStatus_Idle {
    return new RunStatus_Idle().fromJsonString(jsonString, options);
  }

  static equals(a: RunStatus_Idle | PlainMessage<RunStatus_Idle> | undefined, b: RunStatus_Idle | PlainMessage<RunStatus_Idle> | undefined): boolean {
    return proto3.util.equals(RunStatus_Idle, a, b);
  }
}

/**
 * @generated from message autokitteh.runtimes.v1.RunStatus.Running
 */
export class RunStatus_Running extends Message<RunStatus_Running> {
  constructor(data?: PartialMessage<RunStatus_Running>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "autokitteh.runtimes.v1.RunStatus.Running";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): RunStatus_Running {
    return new RunStatus_Running().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): RunStatus_Running {
    return new RunStatus_Running().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): RunStatus_Running {
    return new RunStatus_Running().fromJsonString(jsonString, options);
  }

  static equals(a: RunStatus_Running | PlainMessage<RunStatus_Running> | undefined, b: RunStatus_Running | PlainMessage<RunStatus_Running> | undefined): boolean {
    return proto3.util.equals(RunStatus_Running, a, b);
  }
}

/**
 * @generated from message autokitteh.runtimes.v1.RunStatus.LoadWait
 */
export class RunStatus_LoadWait extends Message<RunStatus_LoadWait> {
  /**
   * @generated from field: string path = 1;
   */
  path = "";

  constructor(data?: PartialMessage<RunStatus_LoadWait>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "autokitteh.runtimes.v1.RunStatus.LoadWait";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "path", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): RunStatus_LoadWait {
    return new RunStatus_LoadWait().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): RunStatus_LoadWait {
    return new RunStatus_LoadWait().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): RunStatus_LoadWait {
    return new RunStatus_LoadWait().fromJsonString(jsonString, options);
  }

  static equals(a: RunStatus_LoadWait | PlainMessage<RunStatus_LoadWait> | undefined, b: RunStatus_LoadWait | PlainMessage<RunStatus_LoadWait> | undefined): boolean {
    return proto3.util.equals(RunStatus_LoadWait, a, b);
  }
}

/**
 * @generated from message autokitteh.runtimes.v1.RunStatus.Completed
 */
export class RunStatus_Completed extends Message<RunStatus_Completed> {
  /**
   * @generated from field: map<string, autokitteh.values.v1.Value> values = 1;
   */
  values: { [key: string]: Value } = {};

  constructor(data?: PartialMessage<RunStatus_Completed>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "autokitteh.runtimes.v1.RunStatus.Completed";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "values", kind: "map", K: 9 /* ScalarType.STRING */, V: {kind: "message", T: Value} },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): RunStatus_Completed {
    return new RunStatus_Completed().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): RunStatus_Completed {
    return new RunStatus_Completed().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): RunStatus_Completed {
    return new RunStatus_Completed().fromJsonString(jsonString, options);
  }

  static equals(a: RunStatus_Completed | PlainMessage<RunStatus_Completed> | undefined, b: RunStatus_Completed | PlainMessage<RunStatus_Completed> | undefined): boolean {
    return proto3.util.equals(RunStatus_Completed, a, b);
  }
}

/**
 * @generated from message autokitteh.runtimes.v1.RunStatus.Error
 */
export class RunStatus_Error extends Message<RunStatus_Error> {
  /**
   * @generated from field: repeated autokitteh.program.v1.Error errors = 1;
   */
  errors: Error[] = [];

  constructor(data?: PartialMessage<RunStatus_Error>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "autokitteh.runtimes.v1.RunStatus.Error";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "errors", kind: "message", T: Error, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): RunStatus_Error {
    return new RunStatus_Error().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): RunStatus_Error {
    return new RunStatus_Error().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): RunStatus_Error {
    return new RunStatus_Error().fromJsonString(jsonString, options);
  }

  static equals(a: RunStatus_Error | PlainMessage<RunStatus_Error> | undefined, b: RunStatus_Error | PlainMessage<RunStatus_Error> | undefined): boolean {
    return proto3.util.equals(RunStatus_Error, a, b);
  }
}

