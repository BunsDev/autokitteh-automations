// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        (unknown)
// source: autokitteh/runtimes/v1/run.proto

package runtimesv1

import (
	_ "buf.build/gen/go/bufbuild/protovalidate/protocolbuffers/go/buf/validate"
	v11 "go.autokitteh.dev/autokitteh/proto/gen/go/autokitteh/program/v1"
	v1 "go.autokitteh.dev/autokitteh/proto/gen/go/autokitteh/values/v1"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CallWait struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Call   *v1.Value            `protobuf:"bytes,1,opt,name=call,proto3" json:"call,omitempty"`
	Args   []*v1.Value          `protobuf:"bytes,2,rep,name=args,proto3" json:"args,omitempty"`
	Kwargs map[string]*v1.Value `protobuf:"bytes,3,rep,name=kwargs,proto3" json:"kwargs,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *CallWait) Reset() {
	*x = CallWait{}
	if protoimpl.UnsafeEnabled {
		mi := &file_autokitteh_runtimes_v1_run_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CallWait) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CallWait) ProtoMessage() {}

func (x *CallWait) ProtoReflect() protoreflect.Message {
	mi := &file_autokitteh_runtimes_v1_run_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CallWait.ProtoReflect.Descriptor instead.
func (*CallWait) Descriptor() ([]byte, []int) {
	return file_autokitteh_runtimes_v1_run_proto_rawDescGZIP(), []int{0}
}

func (x *CallWait) GetCall() *v1.Value {
	if x != nil {
		return x.Call
	}
	return nil
}

func (x *CallWait) GetArgs() []*v1.Value {
	if x != nil {
		return x.Args
	}
	return nil
}

func (x *CallWait) GetKwargs() map[string]*v1.Value {
	if x != nil {
		return x.Kwargs
	}
	return nil
}

type RunStatus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to States:
	//
	//	*RunStatus_Idle_
	//	*RunStatus_Running_
	//	*RunStatus_LoadWait_
	//	*RunStatus_CallWait
	//	*RunStatus_Completed_
	//	*RunStatus_Error_
	States isRunStatus_States `protobuf_oneof:"states"`
}

func (x *RunStatus) Reset() {
	*x = RunStatus{}
	if protoimpl.UnsafeEnabled {
		mi := &file_autokitteh_runtimes_v1_run_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RunStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RunStatus) ProtoMessage() {}

func (x *RunStatus) ProtoReflect() protoreflect.Message {
	mi := &file_autokitteh_runtimes_v1_run_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RunStatus.ProtoReflect.Descriptor instead.
func (*RunStatus) Descriptor() ([]byte, []int) {
	return file_autokitteh_runtimes_v1_run_proto_rawDescGZIP(), []int{1}
}

func (m *RunStatus) GetStates() isRunStatus_States {
	if m != nil {
		return m.States
	}
	return nil
}

func (x *RunStatus) GetIdle() *RunStatus_Idle {
	if x, ok := x.GetStates().(*RunStatus_Idle_); ok {
		return x.Idle
	}
	return nil
}

func (x *RunStatus) GetRunning() *RunStatus_Running {
	if x, ok := x.GetStates().(*RunStatus_Running_); ok {
		return x.Running
	}
	return nil
}

func (x *RunStatus) GetLoadWait() *RunStatus_LoadWait {
	if x, ok := x.GetStates().(*RunStatus_LoadWait_); ok {
		return x.LoadWait
	}
	return nil
}

func (x *RunStatus) GetCallWait() *CallWait {
	if x, ok := x.GetStates().(*RunStatus_CallWait); ok {
		return x.CallWait
	}
	return nil
}

func (x *RunStatus) GetCompleted() *RunStatus_Completed {
	if x, ok := x.GetStates().(*RunStatus_Completed_); ok {
		return x.Completed
	}
	return nil
}

func (x *RunStatus) GetError() *RunStatus_Error {
	if x, ok := x.GetStates().(*RunStatus_Error_); ok {
		return x.Error
	}
	return nil
}

type isRunStatus_States interface {
	isRunStatus_States()
}

type RunStatus_Idle_ struct {
	Idle *RunStatus_Idle `protobuf:"bytes,1,opt,name=idle,proto3,oneof"`
}

type RunStatus_Running_ struct {
	Running *RunStatus_Running `protobuf:"bytes,2,opt,name=running,proto3,oneof"`
}

type RunStatus_LoadWait_ struct {
	LoadWait *RunStatus_LoadWait `protobuf:"bytes,3,opt,name=load_wait,json=loadWait,proto3,oneof"` // only for modules that are not already compiled.
}

type RunStatus_CallWait struct {
	CallWait *CallWait `protobuf:"bytes,4,opt,name=call_wait,json=callWait,proto3,oneof"`
}

type RunStatus_Completed_ struct {
	Completed *RunStatus_Completed `protobuf:"bytes,5,opt,name=completed,proto3,oneof"`
}

type RunStatus_Error_ struct {
	Error *RunStatus_Error `protobuf:"bytes,6,opt,name=error,proto3,oneof"`
}

func (*RunStatus_Idle_) isRunStatus_States() {}

func (*RunStatus_Running_) isRunStatus_States() {}

func (*RunStatus_LoadWait_) isRunStatus_States() {}

func (*RunStatus_CallWait) isRunStatus_States() {}

func (*RunStatus_Completed_) isRunStatus_States() {}

func (*RunStatus_Error_) isRunStatus_States() {}

type RunStatus_Idle struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *RunStatus_Idle) Reset() {
	*x = RunStatus_Idle{}
	if protoimpl.UnsafeEnabled {
		mi := &file_autokitteh_runtimes_v1_run_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RunStatus_Idle) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RunStatus_Idle) ProtoMessage() {}

func (x *RunStatus_Idle) ProtoReflect() protoreflect.Message {
	mi := &file_autokitteh_runtimes_v1_run_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RunStatus_Idle.ProtoReflect.Descriptor instead.
func (*RunStatus_Idle) Descriptor() ([]byte, []int) {
	return file_autokitteh_runtimes_v1_run_proto_rawDescGZIP(), []int{1, 0}
}

type RunStatus_Running struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *RunStatus_Running) Reset() {
	*x = RunStatus_Running{}
	if protoimpl.UnsafeEnabled {
		mi := &file_autokitteh_runtimes_v1_run_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RunStatus_Running) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RunStatus_Running) ProtoMessage() {}

func (x *RunStatus_Running) ProtoReflect() protoreflect.Message {
	mi := &file_autokitteh_runtimes_v1_run_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RunStatus_Running.ProtoReflect.Descriptor instead.
func (*RunStatus_Running) Descriptor() ([]byte, []int) {
	return file_autokitteh_runtimes_v1_run_proto_rawDescGZIP(), []int{1, 1}
}

type RunStatus_LoadWait struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Path string `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
}

func (x *RunStatus_LoadWait) Reset() {
	*x = RunStatus_LoadWait{}
	if protoimpl.UnsafeEnabled {
		mi := &file_autokitteh_runtimes_v1_run_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RunStatus_LoadWait) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RunStatus_LoadWait) ProtoMessage() {}

func (x *RunStatus_LoadWait) ProtoReflect() protoreflect.Message {
	mi := &file_autokitteh_runtimes_v1_run_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RunStatus_LoadWait.ProtoReflect.Descriptor instead.
func (*RunStatus_LoadWait) Descriptor() ([]byte, []int) {
	return file_autokitteh_runtimes_v1_run_proto_rawDescGZIP(), []int{1, 2}
}

func (x *RunStatus_LoadWait) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

type RunStatus_Completed struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Values map[string]*v1.Value `protobuf:"bytes,1,rep,name=values,proto3" json:"values,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *RunStatus_Completed) Reset() {
	*x = RunStatus_Completed{}
	if protoimpl.UnsafeEnabled {
		mi := &file_autokitteh_runtimes_v1_run_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RunStatus_Completed) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RunStatus_Completed) ProtoMessage() {}

func (x *RunStatus_Completed) ProtoReflect() protoreflect.Message {
	mi := &file_autokitteh_runtimes_v1_run_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RunStatus_Completed.ProtoReflect.Descriptor instead.
func (*RunStatus_Completed) Descriptor() ([]byte, []int) {
	return file_autokitteh_runtimes_v1_run_proto_rawDescGZIP(), []int{1, 3}
}

func (x *RunStatus_Completed) GetValues() map[string]*v1.Value {
	if x != nil {
		return x.Values
	}
	return nil
}

type RunStatus_Error struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Errors []*v11.Error `protobuf:"bytes,1,rep,name=errors,proto3" json:"errors,omitempty"`
}

func (x *RunStatus_Error) Reset() {
	*x = RunStatus_Error{}
	if protoimpl.UnsafeEnabled {
		mi := &file_autokitteh_runtimes_v1_run_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RunStatus_Error) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RunStatus_Error) ProtoMessage() {}

func (x *RunStatus_Error) ProtoReflect() protoreflect.Message {
	mi := &file_autokitteh_runtimes_v1_run_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RunStatus_Error.ProtoReflect.Descriptor instead.
func (*RunStatus_Error) Descriptor() ([]byte, []int) {
	return file_autokitteh_runtimes_v1_run_proto_rawDescGZIP(), []int{1, 4}
}

func (x *RunStatus_Error) GetErrors() []*v11.Error {
	if x != nil {
		return x.Errors
	}
	return nil
}

var File_autokitteh_runtimes_v1_run_proto protoreflect.FileDescriptor

var file_autokitteh_runtimes_v1_run_proto_rawDesc = []byte{
	0x0a, 0x20, 0x61, 0x75, 0x74, 0x6f, 0x6b, 0x69, 0x74, 0x74, 0x65, 0x68, 0x2f, 0x72, 0x75, 0x6e,
	0x74, 0x69, 0x6d, 0x65, 0x73, 0x2f, 0x76, 0x31, 0x2f, 0x72, 0x75, 0x6e, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x16, 0x61, 0x75, 0x74, 0x6f, 0x6b, 0x69, 0x74, 0x74, 0x65, 0x68, 0x2e, 0x72,
	0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x1a, 0x23, 0x61, 0x75, 0x74, 0x6f,
	0x6b, 0x69, 0x74, 0x74, 0x65, 0x68, 0x2f, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x2f, 0x76,
	0x31, 0x2f, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x21, 0x61, 0x75, 0x74, 0x6f, 0x6b, 0x69, 0x74, 0x74, 0x65, 0x68, 0x2f, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x73, 0x2f, 0x76, 0x31, 0x2f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x1b, 0x62, 0x75, 0x66, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65,
	0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22,
	0xaf, 0x02, 0x0a, 0x08, 0x43, 0x61, 0x6c, 0x6c, 0x57, 0x61, 0x69, 0x74, 0x12, 0x2f, 0x0a, 0x04,
	0x63, 0x61, 0x6c, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x61, 0x75, 0x74,
	0x6f, 0x6b, 0x69, 0x74, 0x74, 0x65, 0x68, 0x2e, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x2e, 0x76,
	0x31, 0x2e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x04, 0x63, 0x61, 0x6c, 0x6c, 0x12, 0x3d, 0x0a,
	0x04, 0x61, 0x72, 0x67, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x61, 0x75,
	0x74, 0x6f, 0x6b, 0x69, 0x74, 0x74, 0x65, 0x68, 0x2e, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x2e,
	0x76, 0x31, 0x2e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x42, 0x0c, 0xfa, 0xf7, 0x18, 0x08, 0x92, 0x01,
	0x05, 0x22, 0x03, 0xc8, 0x01, 0x01, 0x52, 0x04, 0x61, 0x72, 0x67, 0x73, 0x12, 0x5b, 0x0a, 0x06,
	0x6b, 0x77, 0x61, 0x72, 0x67, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x61,
	0x75, 0x74, 0x6f, 0x6b, 0x69, 0x74, 0x74, 0x65, 0x68, 0x2e, 0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d,
	0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x61, 0x6c, 0x6c, 0x57, 0x61, 0x69, 0x74, 0x2e, 0x4b,
	0x77, 0x61, 0x72, 0x67, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x42, 0x15, 0xfa, 0xf7, 0x18, 0x11,
	0xc8, 0x01, 0x01, 0x9a, 0x01, 0x0b, 0x22, 0x04, 0x72, 0x02, 0x10, 0x01, 0x2a, 0x03, 0xc8, 0x01,
	0x01, 0x52, 0x06, 0x6b, 0x77, 0x61, 0x72, 0x67, 0x73, 0x1a, 0x56, 0x0a, 0x0b, 0x4b, 0x77, 0x61,
	0x72, 0x67, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x31, 0x0a, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x61, 0x75, 0x74, 0x6f,
	0x6b, 0x69, 0x74, 0x74, 0x65, 0x68, 0x2e, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x2e, 0x76, 0x31,
	0x2e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38,
	0x01, 0x22, 0x94, 0x06, 0x0a, 0x09, 0x52, 0x75, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12,
	0x3c, 0x0a, 0x04, 0x69, 0x64, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e,
	0x61, 0x75, 0x74, 0x6f, 0x6b, 0x69, 0x74, 0x74, 0x65, 0x68, 0x2e, 0x72, 0x75, 0x6e, 0x74, 0x69,
	0x6d, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x75, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x2e, 0x49, 0x64, 0x6c, 0x65, 0x48, 0x00, 0x52, 0x04, 0x69, 0x64, 0x6c, 0x65, 0x12, 0x45, 0x0a,
	0x07, 0x72, 0x75, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29,
	0x2e, 0x61, 0x75, 0x74, 0x6f, 0x6b, 0x69, 0x74, 0x74, 0x65, 0x68, 0x2e, 0x72, 0x75, 0x6e, 0x74,
	0x69, 0x6d, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x75, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x2e, 0x52, 0x75, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x48, 0x00, 0x52, 0x07, 0x72, 0x75, 0x6e,
	0x6e, 0x69, 0x6e, 0x67, 0x12, 0x49, 0x0a, 0x09, 0x6c, 0x6f, 0x61, 0x64, 0x5f, 0x77, 0x61, 0x69,
	0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x61, 0x75, 0x74, 0x6f, 0x6b, 0x69,
	0x74, 0x74, 0x65, 0x68, 0x2e, 0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x2e, 0x76, 0x31,
	0x2e, 0x52, 0x75, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x2e, 0x4c, 0x6f, 0x61, 0x64, 0x57,
	0x61, 0x69, 0x74, 0x48, 0x00, 0x52, 0x08, 0x6c, 0x6f, 0x61, 0x64, 0x57, 0x61, 0x69, 0x74, 0x12,
	0x3f, 0x0a, 0x09, 0x63, 0x61, 0x6c, 0x6c, 0x5f, 0x77, 0x61, 0x69, 0x74, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x20, 0x2e, 0x61, 0x75, 0x74, 0x6f, 0x6b, 0x69, 0x74, 0x74, 0x65, 0x68, 0x2e,
	0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x61, 0x6c, 0x6c,
	0x57, 0x61, 0x69, 0x74, 0x48, 0x00, 0x52, 0x08, 0x63, 0x61, 0x6c, 0x6c, 0x57, 0x61, 0x69, 0x74,
	0x12, 0x4b, 0x0a, 0x09, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x61, 0x75, 0x74, 0x6f, 0x6b, 0x69, 0x74, 0x74, 0x65, 0x68,
	0x2e, 0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x75, 0x6e,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x64,
	0x48, 0x00, 0x52, 0x09, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x12, 0x3f, 0x0a,
	0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x61,
	0x75, 0x74, 0x6f, 0x6b, 0x69, 0x74, 0x74, 0x65, 0x68, 0x2e, 0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d,
	0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x75, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x2e,
	0x45, 0x72, 0x72, 0x6f, 0x72, 0x48, 0x00, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x1a, 0x06,
	0x0a, 0x04, 0x49, 0x64, 0x6c, 0x65, 0x1a, 0x09, 0x0a, 0x07, 0x52, 0x75, 0x6e, 0x6e, 0x69, 0x6e,
	0x67, 0x1a, 0x28, 0x0a, 0x08, 0x4c, 0x6f, 0x61, 0x64, 0x57, 0x61, 0x69, 0x74, 0x12, 0x1c, 0x0a,
	0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x08, 0xfa, 0xf7, 0x18,
	0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x1a, 0xcb, 0x01, 0x0a, 0x09,
	0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x12, 0x66, 0x0a, 0x06, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x37, 0x2e, 0x61, 0x75, 0x74, 0x6f,
	0x6b, 0x69, 0x74, 0x74, 0x65, 0x68, 0x2e, 0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x2e,
	0x76, 0x31, 0x2e, 0x52, 0x75, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x2e, 0x43, 0x6f, 0x6d,
	0x70, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x2e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x42, 0x15, 0xfa, 0xf7, 0x18, 0x11, 0xc8, 0x01, 0x01, 0x9a, 0x01, 0x0b, 0x22, 0x04,
	0x72, 0x02, 0x10, 0x01, 0x2a, 0x03, 0xc8, 0x01, 0x01, 0x52, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x73, 0x1a, 0x56, 0x0a, 0x0b, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b,
	0x65, 0x79, 0x12, 0x31, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1b, 0x2e, 0x61, 0x75, 0x74, 0x6f, 0x6b, 0x69, 0x74, 0x74, 0x65, 0x68, 0x2e, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x4b, 0x0a, 0x05, 0x45, 0x72, 0x72,
	0x6f, 0x72, 0x12, 0x42, 0x0a, 0x06, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x61, 0x75, 0x74, 0x6f, 0x6b, 0x69, 0x74, 0x74, 0x65, 0x68, 0x2e,
	0x70, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72,
	0x42, 0x0c, 0xfa, 0xf7, 0x18, 0x08, 0x92, 0x01, 0x05, 0x22, 0x03, 0xc8, 0x01, 0x01, 0x52, 0x06,
	0x65, 0x72, 0x72, 0x6f, 0x72, 0x73, 0x42, 0x10, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x65, 0x73,
	0x12, 0x06, 0xfa, 0xf7, 0x18, 0x02, 0x08, 0x01, 0x42, 0xed, 0x01, 0x0a, 0x1a, 0x63, 0x6f, 0x6d,
	0x2e, 0x61, 0x75, 0x74, 0x6f, 0x6b, 0x69, 0x74, 0x74, 0x65, 0x68, 0x2e, 0x72, 0x75, 0x6e, 0x74,
	0x69, 0x6d, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x42, 0x08, 0x52, 0x75, 0x6e, 0x50, 0x72, 0x6f, 0x74,
	0x6f, 0x50, 0x01, 0x5a, 0x4b, 0x67, 0x6f, 0x2e, 0x61, 0x75, 0x74, 0x6f, 0x6b, 0x69, 0x74, 0x74,
	0x65, 0x68, 0x2e, 0x64, 0x65, 0x76, 0x2f, 0x61, 0x75, 0x74, 0x6f, 0x6b, 0x69, 0x74, 0x74, 0x65,
	0x68, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x67, 0x65, 0x6e, 0x2f, 0x67, 0x6f, 0x2f, 0x61,
	0x75, 0x74, 0x6f, 0x6b, 0x69, 0x74, 0x74, 0x65, 0x68, 0x2f, 0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d,
	0x65, 0x73, 0x2f, 0x76, 0x31, 0x3b, 0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x76, 0x31,
	0xa2, 0x02, 0x03, 0x41, 0x52, 0x58, 0xaa, 0x02, 0x16, 0x41, 0x75, 0x74, 0x6f, 0x6b, 0x69, 0x74,
	0x74, 0x65, 0x68, 0x2e, 0x52, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x2e, 0x56, 0x31, 0xca,
	0x02, 0x16, 0x41, 0x75, 0x74, 0x6f, 0x6b, 0x69, 0x74, 0x74, 0x65, 0x68, 0x5c, 0x52, 0x75, 0x6e,
	0x74, 0x69, 0x6d, 0x65, 0x73, 0x5c, 0x56, 0x31, 0xe2, 0x02, 0x22, 0x41, 0x75, 0x74, 0x6f, 0x6b,
	0x69, 0x74, 0x74, 0x65, 0x68, 0x5c, 0x52, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x5c, 0x56,
	0x31, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x18,
	0x41, 0x75, 0x74, 0x6f, 0x6b, 0x69, 0x74, 0x74, 0x65, 0x68, 0x3a, 0x3a, 0x52, 0x75, 0x6e, 0x74,
	0x69, 0x6d, 0x65, 0x73, 0x3a, 0x3a, 0x56, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_autokitteh_runtimes_v1_run_proto_rawDescOnce sync.Once
	file_autokitteh_runtimes_v1_run_proto_rawDescData = file_autokitteh_runtimes_v1_run_proto_rawDesc
)

func file_autokitteh_runtimes_v1_run_proto_rawDescGZIP() []byte {
	file_autokitteh_runtimes_v1_run_proto_rawDescOnce.Do(func() {
		file_autokitteh_runtimes_v1_run_proto_rawDescData = protoimpl.X.CompressGZIP(file_autokitteh_runtimes_v1_run_proto_rawDescData)
	})
	return file_autokitteh_runtimes_v1_run_proto_rawDescData
}

var file_autokitteh_runtimes_v1_run_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_autokitteh_runtimes_v1_run_proto_goTypes = []interface{}{
	(*CallWait)(nil),            // 0: autokitteh.runtimes.v1.CallWait
	(*RunStatus)(nil),           // 1: autokitteh.runtimes.v1.RunStatus
	nil,                         // 2: autokitteh.runtimes.v1.CallWait.KwargsEntry
	(*RunStatus_Idle)(nil),      // 3: autokitteh.runtimes.v1.RunStatus.Idle
	(*RunStatus_Running)(nil),   // 4: autokitteh.runtimes.v1.RunStatus.Running
	(*RunStatus_LoadWait)(nil),  // 5: autokitteh.runtimes.v1.RunStatus.LoadWait
	(*RunStatus_Completed)(nil), // 6: autokitteh.runtimes.v1.RunStatus.Completed
	(*RunStatus_Error)(nil),     // 7: autokitteh.runtimes.v1.RunStatus.Error
	nil,                         // 8: autokitteh.runtimes.v1.RunStatus.Completed.ValuesEntry
	(*v1.Value)(nil),            // 9: autokitteh.values.v1.Value
	(*v11.Error)(nil),           // 10: autokitteh.program.v1.Error
}
var file_autokitteh_runtimes_v1_run_proto_depIdxs = []int32{
	9,  // 0: autokitteh.runtimes.v1.CallWait.call:type_name -> autokitteh.values.v1.Value
	9,  // 1: autokitteh.runtimes.v1.CallWait.args:type_name -> autokitteh.values.v1.Value
	2,  // 2: autokitteh.runtimes.v1.CallWait.kwargs:type_name -> autokitteh.runtimes.v1.CallWait.KwargsEntry
	3,  // 3: autokitteh.runtimes.v1.RunStatus.idle:type_name -> autokitteh.runtimes.v1.RunStatus.Idle
	4,  // 4: autokitteh.runtimes.v1.RunStatus.running:type_name -> autokitteh.runtimes.v1.RunStatus.Running
	5,  // 5: autokitteh.runtimes.v1.RunStatus.load_wait:type_name -> autokitteh.runtimes.v1.RunStatus.LoadWait
	0,  // 6: autokitteh.runtimes.v1.RunStatus.call_wait:type_name -> autokitteh.runtimes.v1.CallWait
	6,  // 7: autokitteh.runtimes.v1.RunStatus.completed:type_name -> autokitteh.runtimes.v1.RunStatus.Completed
	7,  // 8: autokitteh.runtimes.v1.RunStatus.error:type_name -> autokitteh.runtimes.v1.RunStatus.Error
	9,  // 9: autokitteh.runtimes.v1.CallWait.KwargsEntry.value:type_name -> autokitteh.values.v1.Value
	8,  // 10: autokitteh.runtimes.v1.RunStatus.Completed.values:type_name -> autokitteh.runtimes.v1.RunStatus.Completed.ValuesEntry
	10, // 11: autokitteh.runtimes.v1.RunStatus.Error.errors:type_name -> autokitteh.program.v1.Error
	9,  // 12: autokitteh.runtimes.v1.RunStatus.Completed.ValuesEntry.value:type_name -> autokitteh.values.v1.Value
	13, // [13:13] is the sub-list for method output_type
	13, // [13:13] is the sub-list for method input_type
	13, // [13:13] is the sub-list for extension type_name
	13, // [13:13] is the sub-list for extension extendee
	0,  // [0:13] is the sub-list for field type_name
}

func init() { file_autokitteh_runtimes_v1_run_proto_init() }
func file_autokitteh_runtimes_v1_run_proto_init() {
	if File_autokitteh_runtimes_v1_run_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_autokitteh_runtimes_v1_run_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CallWait); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_autokitteh_runtimes_v1_run_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RunStatus); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_autokitteh_runtimes_v1_run_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RunStatus_Idle); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_autokitteh_runtimes_v1_run_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RunStatus_Running); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_autokitteh_runtimes_v1_run_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RunStatus_LoadWait); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_autokitteh_runtimes_v1_run_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RunStatus_Completed); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_autokitteh_runtimes_v1_run_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RunStatus_Error); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_autokitteh_runtimes_v1_run_proto_msgTypes[1].OneofWrappers = []interface{}{
		(*RunStatus_Idle_)(nil),
		(*RunStatus_Running_)(nil),
		(*RunStatus_LoadWait_)(nil),
		(*RunStatus_CallWait)(nil),
		(*RunStatus_Completed_)(nil),
		(*RunStatus_Error_)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_autokitteh_runtimes_v1_run_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_autokitteh_runtimes_v1_run_proto_goTypes,
		DependencyIndexes: file_autokitteh_runtimes_v1_run_proto_depIdxs,
		MessageInfos:      file_autokitteh_runtimes_v1_run_proto_msgTypes,
	}.Build()
	File_autokitteh_runtimes_v1_run_proto = out.File
	file_autokitteh_runtimes_v1_run_proto_rawDesc = nil
	file_autokitteh_runtimes_v1_run_proto_goTypes = nil
	file_autokitteh_runtimes_v1_run_proto_depIdxs = nil
}
